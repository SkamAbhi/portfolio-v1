import { motion } from "framer-motion";
import { Brain, Layout, Server, Settings, Wrench, Github } from "lucide-react";

interface Skill {
  name: string;
  icon: JSX.Element;
}

interface SkillCategory {
  title: string;
  icon: JSX.Element;
  skills: Skill[];
}

const Icons = {
  react: () => (
    <svg
      stroke="currentColor"
      fill="currentColor"
      stroke-width="0"
      viewBox="0 0 512 512"
      color="#fafafa"
      height="30"
      width="30"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path d="M418.2 177.2c-5.4-1.8-10.8-3.5-16.2-5.1.9-3.7 1.7-7.4 2.5-11.1 12.3-59.6 4.2-107.5-23.1-123.3-26.3-15.1-69.2.6-112.6 38.4-4.3 3.7-8.5 7.6-12.5 11.5-2.7-2.6-5.5-5.2-8.3-7.7-45.5-40.4-91.1-57.4-118.4-41.5-26.2 15.2-34 60.3-23 116.7 1.1 5.6 2.3 11.1 3.7 16.7-6.4 1.8-12.7 3.8-18.6 5.9C38.3 196.2 0 225.4 0 255.6c0 31.2 40.8 62.5 96.3 81.5 4.5 1.5 9 3 13.6 4.3-1.5 6-2.8 11.9-4 18-10.5 55.5-2.3 99.5 23.9 114.6 27 15.6 72.4-.4 116.6-39.1 3.5-3.1 7-6.3 10.5-9.7 4.4 4.3 9 8.4 13.6 12.4 42.8 36.8 85.1 51.7 111.2 36.6 27-15.6 35.8-62.9 24.4-120.5-.9-4.4-1.9-8.9-3-13.5 3.2-.9 6.3-1.9 9.4-2.9 57.7-19.1 99.5-50 99.5-81.7 0-30.3-39.4-59.7-93.8-78.4zM282.9 92.3c37.2-32.4 71.9-45.1 87.7-36 16.9 9.7 23.4 48.9 12.8 100.4-.7 3.4-1.4 6.7-2.3 10-22.2-5-44.7-8.6-67.3-10.6-13-18.6-27.2-36.4-42.6-53.1 3.9-3.7 7.7-7.2 11.7-10.7zM167.2 307.5c5.1 8.7 10.3 17.4 15.8 25.9-15.6-1.7-31.1-4.2-46.4-7.5 4.4-14.4 9.9-29.3 16.3-44.5 4.6 8.8 9.3 17.5 14.3 26.1zm-30.3-120.3c14.4-3.2 29.7-5.8 45.6-7.8-5.3 8.3-10.5 16.8-15.4 25.4-4.9 8.5-9.7 17.2-14.2 26-6.3-14.9-11.6-29.5-16-43.6zm27.4 68.9c6.6-13.8 13.8-27.3 21.4-40.6s15.8-26.2 24.4-38.9c15-1.1 30.3-1.7 45.9-1.7s31 .6 45.9 1.7c8.5 12.6 16.6 25.5 24.3 38.7s14.9 26.7 21.7 40.4c-6.7 13.8-13.9 27.4-21.6 40.8-7.6 13.3-15.7 26.2-24.2 39-14.9 1.1-30.4 1.6-46.1 1.6s-30.9-.5-45.6-1.4c-8.7-12.7-16.9-25.7-24.6-39s-14.8-26.8-21.5-40.6zm180.6 51.2c5.1-8.8 9.9-17.7 14.6-26.7 6.4 14.5 12 29.2 16.9 44.3-15.5 3.5-31.2 6.2-47 8 5.4-8.4 10.5-17 15.5-25.6zm14.4-76.5c-4.7-8.8-9.5-17.6-14.5-26.2-4.9-8.5-10-16.9-15.3-25.2 16.1 2 31.5 4.7 45.9 8-4.6 14.8-10 29.2-16.1 43.4zM256.2 118.3c10.5 11.4 20.4 23.4 29.6 35.8-19.8-.9-39.7-.9-59.5 0 9.8-12.9 19.9-24.9 29.9-35.8zM140.2 57c16.8-9.8 54.1 4.2 93.4 39 2.5 2.2 5 4.6 7.6 7-15.5 16.7-29.8 34.5-42.9 53.1-22.6 2-45 5.5-67.2 10.4-1.3-5.1-2.4-10.3-3.5-15.5-9.4-48.4-3.2-84.9 12.6-94zm-24.5 263.6c-4.2-1.2-8.3-2.5-12.4-3.9-21.3-6.7-45.5-17.3-63-31.2-10.1-7-16.9-17.8-18.8-29.9 0-18.3 31.6-41.7 77.2-57.6 5.7-2 11.5-3.8 17.3-5.5 6.8 21.7 15 43 24.5 63.6-9.6 20.9-17.9 42.5-24.8 64.5zm116.6 98c-16.5 15.1-35.6 27.1-56.4 35.3-11.1 5.3-23.9 5.8-35.3 1.3-15.9-9.2-22.5-44.5-13.5-92 1.1-5.6 2.3-11.2 3.7-16.7 22.4 4.8 45 8.1 67.9 9.8 13.2 18.7 27.7 36.6 43.2 53.4-3.2 3.1-6.4 6.1-9.6 8.9zm24.5-24.3c-10.2-11-20.4-23.2-30.3-36.3 9.6.4 19.5.6 29.5.6 10.3 0 20.4-.2 30.4-.7-9.2 12.7-19.1 24.8-29.6 36.4zm130.7 30c-.9 12.2-6.9 23.6-16.5 31.3-15.9 9.2-49.8-2.8-86.4-34.2-4.2-3.6-8.4-7.5-12.7-11.5 15.3-16.9 29.4-34.8 42.2-53.6 22.9-1.9 45.7-5.4 68.2-10.5 1 4.1 1.9 8.2 2.7 12.2 4.9 21.6 5.7 44.1 2.5 66.3zm18.2-107.5c-2.8.9-5.6 1.8-8.5 2.6-7-21.8-15.6-43.1-25.5-63.8 9.6-20.4 17.7-41.4 24.5-62.9 5.2 1.5 10.2 3.1 15 4.7 46.6 16 79.3 39.8 79.3 58 0 19.6-34.9 44.9-84.8 61.4zm-149.7-15c25.3 0 45.8-20.5 45.8-45.8s-20.5-45.8-45.8-45.8c-25.3 0-45.8 20.5-45.8 45.8s20.5 45.8 45.8 45.8z"></path>
    </svg>
  ),
  nextjs: () => (
    <svg
      width="30"
      height="30"
      viewBox="0 0 256 256"
      version="1.1"
      preserveAspectRatio="xMidYMid"
    >
      <g>
        <path
          d="M119.616813,0.0688905149 C119.066276,0.118932037 117.314565,0.294077364 115.738025,0.419181169 C79.3775171,3.69690087 45.3192571,23.3131775 23.7481916,53.4631946 C11.7364614,70.2271045 4.05395894,89.2428829 1.15112414,109.384595 C0.12512219,116.415429 0,118.492153 0,128.025062 C0,137.557972 0.12512219,139.634696 1.15112414,146.665529 C8.10791789,194.730411 42.3163245,235.11392 88.7116325,250.076335 C97.0197458,252.753556 105.778299,254.580072 115.738025,255.680985 C119.616813,256.106338 136.383187,256.106338 140.261975,255.680985 C157.453763,253.779407 172.017986,249.525878 186.382014,242.194795 C188.584164,241.068861 189.00958,240.768612 188.709286,240.518404 C188.509091,240.36828 179.124927,227.782837 167.86393,212.570214 L147.393939,184.922273 L121.743891,146.965779 C107.630108,126.098464 96.0187683,109.034305 95.9186706,109.034305 C95.8185728,109.009284 95.7184751,125.873277 95.6684262,146.465363 C95.5933529,182.52028 95.5683284,183.971484 95.1178886,184.82219 C94.4672532,186.048207 93.9667644,186.548623 92.915738,187.099079 C92.114956,187.499411 91.4142717,187.574474 87.6355816,187.574474 L83.3063539,187.574474 L82.1552297,186.848872 C81.4044966,186.373477 80.8539589,185.747958 80.4785924,185.022356 L79.9530792,183.896422 L80.0031281,133.729796 L80.0782014,83.5381493 L80.8539589,82.5623397 C81.25435,82.0369037 82.1051808,81.3613431 82.7057674,81.0360732 C83.7317693,80.535658 84.1321603,80.4856165 88.4613881,80.4856165 C93.5663734,80.4856165 94.4172043,80.6857826 95.7434995,82.1369867 C96.1188661,82.5373189 110.007429,103.454675 126.623656,128.650581 C143.239883,153.846488 165.962072,188.250034 177.122972,205.139048 L197.392766,235.839522 L198.418768,235.163961 C207.502639,229.259062 217.112023,220.852086 224.719453,212.09482 C240.910264,193.504394 251.345455,170.835585 254.848876,146.665529 C255.874878,139.634696 256,137.557972 256,128.025062 C256,118.492153 255.874878,116.415429 254.848876,109.384595 C247.892082,61.3197135 213.683675,20.9362052 167.288368,5.97379012 C159.105376,3.32158945 150.396872,1.49507389 140.637341,0.394160408 C138.234995,0.143952798 121.693842,-0.131275573 119.616813,0.0688905149 L119.616813,0.0688905149 Z M172.017986,77.4831252 C173.219159,78.0836234 174.195112,79.2345784 174.545455,80.435575 C174.74565,81.0861148 174.795699,94.9976579 174.74565,126.348671 L174.670577,171.336 L166.73783,159.17591 L158.780059,147.01582 L158.780059,114.313685 C158.780059,93.1711423 158.880156,81.2862808 159.030303,80.7108033 C159.430694,79.3096407 160.306549,78.2087272 161.507722,77.5581875 C162.533724,77.0327515 162.909091,76.98271 166.837928,76.98271 C170.541544,76.98271 171.19218,77.0327515 172.017986,77.4831252 Z"
          fill="#ffffff"
        ></path>
      </g>
    </svg>
  ),
  graphql: () => (
    <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path
        d="M12 2L2 7L12 12L22 7L12 2Z"
        stroke="currentColor"
        strokeWidth="2"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M2 17L12 22L22 17"
        stroke="currentColor"
        strokeWidth="2"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M2 12L12 17L22 12"
        stroke="currentColor"
        strokeWidth="2"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  ),
  tailwind: () => (
    <svg
      width="30"
      height="30"
      viewBox="0 0 256 154"
      version="1.1"
      preserveAspectRatio="xMidYMid"
    >
      <defs>
        <linearGradient
          x1="-2.77777778%"
          y1="32%"
          x2="100%"
          y2="67.5555556%"
          id="linearGradient-1"
        >
          <stop stop-color="#2298BD" offset="0%"></stop>
          <stop stop-color="#0ED7B5" offset="100%"></stop>
        </linearGradient>
      </defs>
      <g>
        <path
          d="M128,-1.0658141e-14 C93.8666667,-1.0658141e-14 72.5333333,17.0666667 64,51.2 C76.8,34.1333333 91.7333333,27.7333333 108.8,32 C118.537481,34.4343704 125.497363,41.4985481 133.201067,49.3184 C145.750756,62.0567704 160.275437,76.8 192,76.8 C226.133333,76.8 247.466667,59.7333333 256,25.6 C243.2,42.6666667 228.266667,49.0666667 211.2,44.8 C201.462519,42.3656296 194.502637,35.3014519 186.798933,27.4816 C174.249244,14.7432296 159.724563,-1.0658141e-14 128,-1.0658141e-14 Z M64,76.8 C29.8666667,76.8 8.53333333,93.8666667 0,128 C12.8,110.933333 27.7333333,104.533333 44.8,108.8 C54.5374815,111.23437 61.497363,118.298548 69.2010667,126.1184 C81.7507556,138.85677 96.275437,153.6 128,153.6 C162.133333,153.6 183.466667,136.533333 192,102.4 C179.2,119.466667 164.266667,125.866667 147.2,121.6 C137.462519,119.16563 130.502637,112.101452 122.798933,104.2816 C110.249244,91.5432296 95.724563,76.8 64,76.8 Z"
          fill="url(#linearGradient-1)"
        ></path>
      </g>
    </svg>
  ),
  recoil: () => (
    <svg
      width="30"
      height="30"
      viewBox="0 0 512 182"
      version="1.1"
      xmlns="http://www.w3.org/2000/svg"
      preserveAspectRatio="xMidYMid"
    >
      <title>Recoil</title>
      <g>
        <path
          d="M38.9404276,0 C47.403715,0 54.2587768,6.8550618 54.2587768,15.3183492 C54.2587768,21.6272174 50.4364386,27.0494607 44.9764057,29.4004356 L44.8104511,29.4707349 L44.8104511,35.9237403 C44.8104511,42.1530013 49.4406031,47.4562319 55.5994934,48.3223977 L55.7865912,48.3472833 L57.6360506,48.5885172 C67.6472553,49.8549949 75.406944,57.0518046 77.3971232,66.9423923 C79.3873024,76.83298 75.0450932,86.4823339 66.3003663,91.5482446 C62.3852596,93.802397 58.1200689,95.1813392 53.6195757,95.6468107 L53.3943555,95.6693228 L25.5921547,98.2826895 C22.757657,98.5440262 20.0839819,99.4084475 17.611335,100.835748 C12.565527,103.750657 11.5804888,108.796465 12.344396,112.535589 C13.1006641,116.237323 15.9257235,120.451328 21.5802984,121.237445 L23.6019755,121.501447 C35.7818724,123.013983 44.9866504,133.33366 45.1695279,145.574948 L45.1723019,145.946477 L45.1723019,151.937117 C50.539755,154.30925 54.2989824,159.696806 54.2989824,165.948783 C54.2989824,174.412071 47.4439206,181.267133 38.9806332,181.267133 C30.5173458,181.267133 23.662284,174.412071 23.662284,165.948783 C23.662284,159.659817 27.4649194,154.237773 32.9050525,151.8868 L33.070404,151.816501 L33.070404,145.946477 C33.070404,139.717216 28.440252,134.413985 22.2813617,133.54782 L22.094264,133.522934 L20.2448045,133.2817 C10.2335999,132.015222 2.47391114,124.818413 0.483731905,114.927825 C-1.52655015,105.037237 2.83576191,95.3878834 11.5804888,90.3219726 C15.4955955,88.0678203 19.7607863,86.6888781 24.2612794,86.2234066 L24.4864996,86.2008944 L52.2887004,83.5875277 C55.1231981,83.326191 57.7968732,82.4617698 60.2695201,81.0344695 C65.3153281,78.1195605 66.3003663,73.0737526 65.5364591,69.334628 C64.780191,65.6328946 61.9551316,61.4188891 56.3005567,60.6327723 L54.2788796,60.36877 C42.0989827,58.8562338 32.8942048,48.5365574 32.7113272,36.2952695 L32.7085532,35.9237403 L32.7085532,29.3099123 C27.3612029,26.9176767 23.6220783,21.5502236 23.6220783,15.3183492 C23.6220783,6.8550618 30.4771401,0 38.9404276,0 Z M57.3546112,102.504282 L65.9385155,111.912402 C72.3269908,118.937735 75.8782667,127.992453 75.9486533,137.45758 L75.9497201,137.744526 L63.8277194,137.744526 C63.8277194,131.256542 61.4436837,125.044396 57.1242444,120.219917 L56.9927604,120.074147 L42.3981127,104.072302 L54.0577486,102.966647 L54.4262727,102.925641 C55.2996807,102.826417 56.1716942,102.711854 57.0323971,102.56212 L57.3546112,102.504282 Z M12.9876863,43.6633262 C12.9876863,50.1513105 15.371722,56.3634559 19.6911612,61.187935 L19.8226452,61.3337054 L34.4574986,77.3757562 L23.6823868,78.401 L23.3623063,78.4302621 C22.1888122,78.5427903 21.0175324,78.7128911 19.8728245,78.9405645 L19.5613086,79.0040846 L10.8969929,69.4954505 C4.5085176,62.4900196 0.957241781,53.4157974 0.886855112,43.9502781 L0.885788316,43.6633262 L12.9876863,43.6633262 Z"
          fill="#FFFFFF"
        ></path>
        <path
          d="M181.00706,47.7441987 L181.244009,47.7477289 L181.484136,47.7534819 C185.468983,47.8669901 192.500277,48.9624859 198.215075,54.6193633 C202.135125,58.4791049 204.567566,63.9068664 205.110342,69.8975069 C205.612912,75.606708 204.366538,81.2757034 201.572246,85.8591464 C196.815717,93.7203544 188.926448,96.4785438 185.648218,97.3131513 L185.231065,97.4187685 L192.968238,107.188239 C199.68258,114.46546 203.361397,123.893683 203.361397,133.703859 L203.361397,137.724423 L191.721863,137.724423 L191.721863,133.703859 C191.721863,126.748283 189.088394,120.09425 184.28382,114.947928 L184.122997,114.787105 L173.106652,100.896056 L173.911199,100.259461 C170.086793,101.19977 166.3236,102.142319 162.634511,103.069917 L158.41149,104.13261 C153.385785,105.399088 148.239463,106.705771 142.932318,108.012455 L142.811701,137.724423 L131.152065,137.684218 L131.373196,63.4243987 C131.393299,54.9008028 138.429286,47.9854326 147.073499,47.9854326 L147.133808,47.9854326 C151.899924,48.0352526 156.542574,47.9753242 161.073089,47.9076418 L167.106502,47.8174809 C171.59778,47.7516927 176.217177,47.6954881 181.00706,47.7441987 Z M168.352537,59.4606288 L160.108533,59.5833203 C155.878663,59.6438462 151.529892,59.6909029 147.053396,59.6450685 C144.842086,59.6651713 143.052935,61.373911 143.032832,63.4646044 L142.932318,95.990968 L144.640742,95.5648835 L146.481524,95.1039551 C149.540624,94.3367044 152.554868,93.575279 155.516684,92.8348252 L157.11067,92.4301483 C162.706995,91.0108647 168.484751,89.5624356 174.413335,88.1307652 L182.845575,85.9972933 L182.96289,85.9663849 C184.925038,85.4402389 189.114994,83.8604557 191.561041,79.8283003 C194.717184,74.6216698 193.993482,66.8820839 189.972918,62.9017254 C186.868239,59.8368494 182.640501,59.4318479 180.898268,59.4045486 L180.846238,59.4038346 C177.127871,59.3648308 173.468364,59.3930944 169.88403,59.439683 L168.352537,59.4606288 Z M286.767999,135.694039 L246.059787,135.694039 C232.028019,135.694039 220.609617,124.275636 220.609617,110.243868 L220.609617,72.9330328 C220.609617,58.9012641 232.028019,47.4828621 246.059787,47.4828621 L267.831142,47.4828621 C281.862911,47.4828621 293.281313,58.9012641 293.281313,72.9330328 L293.281313,78.8030564 C293.281313,89.5982711 284.49638,98.3832036 273.701166,98.3832036 L232.269252,98.3832036 L232.269252,110.263971 C232.269252,117.862837 238.460921,124.054505 246.059787,124.054505 L286.767999,124.054505 L286.767999,135.694039 Z M232.269252,86.7235677 L273.721268,86.7235677 C278.08358,86.7235677 281.64178,83.1653685 281.64178,78.8030564 L281.64178,72.9330328 C281.64178,65.3341667 275.450111,59.142498 267.851245,59.142498 L246.059787,59.142498 C238.460921,59.142498 232.269252,65.3341667 232.269252,72.9330328 L232.269252,86.7235677 Z M351.257847,136.658974 L329.486493,136.658974 C315.454724,136.658974 304.036322,125.240572 304.036322,111.208803 L304.036322,73.8778654 C304.036322,59.8460967 315.454724,48.4276946 329.486493,48.4276946 L351.257847,48.4276946 C365.289616,48.4276946 376.708018,59.8460967 376.708018,73.8778654 L376.708018,79.7076834 L365.048382,79.7076834 L365.048382,73.8778654 C365.048382,66.2789992 358.856713,60.0873305 351.257847,60.0873305 L329.486493,60.0873305 C321.887626,60.0873305 315.695958,66.2789992 315.695958,73.8778654 L315.695958,111.208803 C315.695958,118.807669 321.887626,124.999338 329.486493,124.999338 L351.257847,124.999338 C358.856713,124.999338 365.048382,118.807669 365.048382,111.208803 L365.048382,105.378985 L376.708018,105.378985 L376.708018,111.208803 C376.708018,125.240572 365.289616,136.658974 351.257847,136.658974 Z M436.534012,135.694039 L414.762657,135.694039 C400.730888,135.694039 389.312486,124.275636 389.312486,110.243868 L389.312486,72.9330328 C389.312486,58.9012641 400.730888,47.4828621 414.762657,47.4828621 L436.534012,47.4828621 C450.56578,47.4828621 461.984183,58.9012641 461.984183,72.9330328 L461.984183,110.263971 C461.96408,124.295739 450.56578,135.694039 436.534012,135.694039 Z M414.762657,59.142498 C407.163791,59.142498 400.972122,65.3341667 400.972122,72.9330328 L400.972122,110.263971 C400.972122,117.862837 407.163791,124.054505 414.762657,124.054505 L436.534012,124.054505 C444.132878,124.054505 450.324547,117.862837 450.324547,110.263971 L450.324547,72.9330328 C450.324547,65.3341667 444.132878,59.142498 436.534012,59.142498 L414.762657,59.142498 Z M475.111324,54.8203916 L486.77096,54.8203916 L486.77096,134.266738 L475.111324,134.266738 L475.111324,54.8203916 Z M475.111324,29.9129969 L486.77096,29.9129969 L486.77096,40.8288285 L475.111324,40.8288285 L475.111324,29.9129969 Z M500.340364,29.5310433 L512,29.5310433 L512,134.286841 L500.340364,134.286841 L500.340364,29.5310433 Z"
          fill="#FFFFFF"
        ></path>
      </g>
    </svg>
  ),
  node: () => (
    <svg
      stroke="currentColor"
      fill="currentColor"
      stroke-width="0"
      viewBox="0 0 448 512"
      color="#fafafa"
      height="30"
      width="30"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path d="M224 508c-6.7 0-13.5-1.8-19.4-5.2l-61.7-36.5c-9.2-5.2-4.7-7-1.7-8 12.3-4.3 14.8-5.2 27.9-12.7 1.4-.8 3.2-.5 4.6.4l47.4 28.1c1.7 1 4.1 1 5.7 0l184.7-106.6c1.7-1 2.8-3 2.8-5V149.3c0-2.1-1.1-4-2.9-5.1L226.8 37.7c-1.7-1-4-1-5.7 0L36.6 144.3c-1.8 1-2.9 3-2.9 5.1v213.1c0 2 1.1 4 2.9 4.9l50.6 29.2c27.5 13.7 44.3-2.4 44.3-18.7V167.5c0-3 2.4-5.3 5.4-5.3h23.4c2.9 0 5.4 2.3 5.4 5.3V378c0 36.6-20 57.6-54.7 57.6-10.7 0-19.1 0-42.5-11.6l-48.4-27.9C8.1 389.2.7 376.3.7 362.4V149.3c0-13.8 7.4-26.8 19.4-33.7L204.6 9c11.7-6.6 27.2-6.6 38.8 0l184.7 106.7c12 6.9 19.4 19.8 19.4 33.7v213.1c0 13.8-7.4 26.7-19.4 33.7L243.4 502.8c-5.9 3.4-12.6 5.2-19.4 5.2zm149.1-210.1c0-39.9-27-50.5-83.7-58-57.4-7.6-63.2-11.5-63.2-24.9 0-11.1 4.9-25.9 47.4-25.9 37.9 0 51.9 8.2 57.7 33.8.5 2.4 2.7 4.2 5.2 4.2h24c1.5 0 2.9-.6 3.9-1.7s1.5-2.6 1.4-4.1c-3.7-44.1-33-64.6-92.2-64.6-52.7 0-84.1 22.2-84.1 59.5 0 40.4 31.3 51.6 81.8 56.6 60.5 5.9 65.2 14.8 65.2 26.7 0 20.6-16.6 29.4-55.5 29.4-48.9 0-59.6-12.3-63.2-36.6-.4-2.6-2.6-4.5-5.3-4.5h-23.9c-3 0-5.3 2.4-5.3 5.3 0 31.1 16.9 68.2 97.8 68.2 58.4-.1 92-23.2 92-63.4z"></path>
    </svg>
  ),
  typescript: () => (
    <svg
      stroke="currentColor"
      fill="currentColor"
      stroke-width="0"
      role="img"
      viewBox="0 0 24 24"
      color="#fafafa"
      height="30"
      width="30"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path d="M1.125 0C.502 0 0 .502 0 1.125v21.75C0 23.498.502 24 1.125 24h21.75c.623 0 1.125-.502 1.125-1.125V1.125C24 .502 23.498 0 22.875 0zm17.363 9.75c.612 0 1.154.037 1.627.111a6.38 6.38 0 0 1 1.306.34v2.458a3.95 3.95 0 0 0-.643-.361 5.093 5.093 0 0 0-.717-.26 5.453 5.453 0 0 0-1.426-.2c-.3 0-.573.028-.819.086a2.1 2.1 0 0 0-.623.242c-.17.104-.3.229-.393.374a.888.888 0 0 0-.14.49c0 .196.053.373.156.529.104.156.252.304.443.444s.423.276.696.41c.273.135.582.274.926.416.47.197.892.407 1.266.628.374.222.695.473.963.753.268.279.472.598.614.957.142.359.214.776.214 1.253 0 .657-.125 1.21-.373 1.656a3.033 3.033 0 0 1-1.012 1.085 4.38 4.38 0 0 1-1.487.596c-.566.12-1.163.18-1.79.18a9.916 9.916 0 0 1-1.84-.164 5.544 5.544 0 0 1-1.512-.493v-2.63a5.033 5.033 0 0 0 3.237 1.2c.333 0 .624-.03.872-.09.249-.06.456-.144.623-.25.166-.108.29-.234.373-.38a1.023 1.023 0 0 0-.074-1.089 2.12 2.12 0 0 0-.537-.5 5.597 5.597 0 0 0-.807-.444 27.72 27.72 0 0 0-1.007-.436c-.918-.383-1.602-.852-2.053-1.405-.45-.553-.676-1.222-.676-2.005 0-.614.123-1.141.369-1.582.246-.441.58-.804 1.004-1.089a4.494 4.494 0 0 1 1.47-.629 7.536 7.536 0 0 1 1.77-.201zm-15.113.188h9.563v2.166H9.506v9.646H6.789v-9.646H3.375z"></path>
    </svg>
  ),
  prisma: () => (
    <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path
        d="M21.807 18.285L13.553.749a1.324 1.324 0 00-1.129-.74 1.324 1.324 0 00-1.129.74L2.942 18.285a1.333 1.333 0 00.103 1.33l4.5 5.999a1.333 1.333 0 001.129.54h7.401a1.333 1.333 0 001.129-.54l4.5-5.999a1.333 1.333 0 00.103-1.33zM12 16.859l-3.426-3.425 3.426-3.426 3.426 3.426L12 16.859z"
        fill="currentColor"
      />
    </svg>
  ),

  express: () => (
    <svg viewBox="0 0 24 24" fill="currentColor" className="w-6 h-6">
      <path d="M24 18.588a1.529 1.529 0 01-1.895-.72l-3.45-4.771-.5-.667-4.003 5.444a1.466 1.466 0 01-1.802.708l5.158-6.92-4.798-6.251a1.595 1.595 0 011.9.666l3.576 4.83 3.596-4.81a1.435 1.435 0 011.788-.668L21.708 7.9l-2.522 3.283a.666.666 0 000 .994l4.804 6.412zM.002 11.576l.42-2.075c1.154-4.103 5.858-5.81 9.094-3.27 1.895 1.489 2.368 3.597 2.275 5.973H1.116C.943 16.447 4.005 19.009 7.92 17.7a4.078 4.078 0 002.582-2.876c.207-.666.548-.78 1.174-.588a5.417 5.417 0 01-2.589 3.957 6.272 6.272 0 01-7.306-.933 6.575 6.575 0 01-1.64-3.858c0-.235-.08-.455-.134-.666A88.33 88.33 0 010 11.577zm1.127-.286h9.654c-.06-3.076-2.001-5.258-4.59-5.278-2.882-.04-4.944 2.094-5.071 5.264z" />
    </svg>
  ),

  mongodb: () => (
    <svg
      stroke="currentColor"
      fill="currentColor"
      stroke-width="0"
      role="img"
      viewBox="0 0 24 24"
      color="#fafafa"
      height="30"
      width="30"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path d="M17.193 9.555c-1.264-5.58-4.252-7.414-4.573-8.115-.28-.394-.53-.954-.735-1.44-.036.495-.055.685-.523 1.184-.723.566-4.438 3.682-4.74 10.02-.282 5.912 4.27 9.435 4.888 9.884l.07.05A73.49 73.49 0 0111.91 24h.481c.114-1.032.284-2.056.51-3.07.417-.296.604-.463.85-.693a11.342 11.342 0 003.639-8.464c.01-.814-.103-1.662-.197-2.218zm-5.336 8.195s0-8.291.275-8.29c.213 0 .49 10.695.49 10.695-.381-.045-.765-1.76-.765-2.405z"></path>
    </svg>
  ),

  git: () => (
    <svg viewBox="0 0 24 24" fill="currentColor" className="w-6 h-6">
      <path d="M2.6 10.59L8.38 4.8l1.69 1.7c-.24.85.15 1.78.93 2.23v5.54c-.8.45-1.18 1.4-.94 2.24L8.38 18.2 2.6 12.41a1.5 1.5 0 010-2.12zm9.76 6.25h3.84v-7.25L12.36 6.8l-1.69 1.7c.24.85-.15 1.78-.93 2.23v5.54c.8.45 1.18 1.4.94 2.24l1.69 1.69 3.84-3.84v-7.25" />
    </svg>
  ),
  redux: () => (
    <svg viewBox="0 0 24 24" fill="currentColor" className="w-6 h-6">
      <path d="M16.63 16.563c.885-.092 1.557-.863 1.527-1.788a1.723 1.723 0 00-1.71-1.665h-.062c-.947.03-1.68.832-1.65 1.788.032.463.245.863.581 1.11-1.224 2.41-3.103 4.174-5.918 5.647-1.863.956-3.789 1.31-5.714 1.078-1.587-.185-2.827-.832-3.592-1.942-.947-1.39-1.039-2.888-.245-4.39.61-1.158 1.557-2.01 2.167-2.441-.123-.401-.308-1.078-.401-1.565C-.766 14.273-.092 17.1.93 18.863c.766 1.326 2.323 2.158 4.034 2.158.462 0 .924-.03 1.387-.123 2.949-.401 5.192-1.695 6.477-3.607zm5.254-3.484c-1.71-2.013-4.22-3.113-7.078-3.113h-.369c-.215-.432-.678-.709-1.224-.709h-.062c-.947.031-1.68.833-1.65 1.789.031.463.246.862.582 1.11-.947 1.88-2.662 3.267-4.89 4.36-1.496.74-3.022 1.017-4.487.862-1.218-.123-2.167-.555-2.767-1.294-.885-1.11-.946-2.318-.246-3.545.462-.801 1.402-1.387 1.987-1.665-.154-.493-.369-1.325-.462-1.942-5.192 3.752-4.674 8.85-3.083 11.237.766 1.11 2.323 1.819 4.033 1.819.463 0 .924-.031 1.387-.123 3.392-.463 5.931-2.595 7.17-5.37.801.031 1.588-.092 2.318-.37 2.013-.74 3.514-2.166 4.373-4.236.678.308 1.434.401 2.136.401 1.986 0 3.484-1.14 3.545-2.87.03-.956-.739-1.849-1.695-1.849h-.061c-.947.03-1.68.832-1.649 1.788.03.463.246.863.582 1.11z" />
    </svg>
  ),

  restApi: () => (
    <svg viewBox="0 0 24 24" fill="currentColor" className="w-6 h-6">
      <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z" />
    </svg>
  ),
};
const skillsData: SkillCategory[] = [
  {
    title: "Frontend Development",
    icon: <Layout className="w-8 h-8 text-blue-500" />,
    skills: [
      {
        name: "React.js",
        icon: <Icons.react />,
      },
      {
        name: "TypeScript",
        icon: <Icons.typescript />,
      },
      {
        name: "Next.js",
        icon: <Icons.nextjs />,
      },
      {
        name: "Tailwind CSS",
        icon: <Icons.tailwind />,
      },
      {
        name: "Recoil",
        icon: <Icons.recoil />,
      },
    ],
  },
  {
    title: "Backend Development",
    icon: <Server className="w-8 h-8 text-green-500" />,
    skills: [
      { name: "Node.js", icon: <Icons.node /> },
      { name: "Express.js", icon: <Icons.express /> },
      { name: "MongoDB", icon: <Icons.mongodb /> },
      { name: "REST APIs", icon: <Icons.restApi /> },
    ],
  },
  {
    title: "Tools & Others",
    icon: <Wrench className="w-8 h-8 text-gray-400" />,
    skills: [
      {
        name: "Git",
        icon: <Github className="w-5 h-5 text-white-500" />,
      },
      {
        name: "Problem Solving",
        icon: <Brain className="w-5 h-5 text-yellow-500" />,
      },
      {
        name: "System Design",
        icon: <Settings className="w-5 h-5 text-purple-500" />,
      },
    ],
  },
];

const SkillCard = ({ skill }: { skill: Skill }) => {
  return (
    <motion.div
      className="relative"
      initial={{ opacity: 0, y: 20 }}
      whileInView={{ opacity: 1, y: 0 }}
      viewport={{ once: true }}
      transition={{ duration: 0.3 }}
    >
      <motion.div
        className="relative bg-zinc-900/50 backdrop-blur-sm p-4 sm:p-6 rounded-lg border border-zinc-800 hover:border-white/50 transition-all duration-300 flex flex-col items-center gap-3 sm:gap-4 h-full"
        whileHover={{ y: -4, backgroundColor: "rgba(30, 41, 59, 0.5)" }}
        transition={{
          y: {
            duration: 0.3,
            ease: "easeOut",
          },
        }}
      >
        <motion.div
          className="p-2 sm:p-3 rounded-full bg-zinc-800/50"
          whileHover={{ rotate: 360 }}
          transition={{ duration: 1 }}
        >
          <motion.div
            initial={{ color: "#ffffff" }}
            whileHover={{ color: "#3B82F6" }}
            transition={{ duration: 0.3 }}
            className="w-6 h-6 sm:w-8 sm:h-8 flex justify-center items-center"
          >
            {skill.icon}
          </motion.div>
        </motion.div>

        <motion.span
          className="text-gray-200 font-medium text-center text-sm sm:text-base"
          whileHover={{ scale: 1.05 }}
          transition={{ duration: 0.2 }}
        >
          {skill.name}
        </motion.span>
      </motion.div>
    </motion.div>
  );
};

const SkillCategory = ({ category }: { category: SkillCategory }) => {
  return (
    <motion.div
      className="mb-8 sm:mb-12"
      initial={{ opacity: 0, y: 20 }}
      whileInView={{ opacity: 1, y: 0 }}
      viewport={{ once: true }}
      transition={{ duration: 0.5 }}
    >
      <motion.div
        className="flex items-center gap-2 sm:gap-3 mb-6 sm:mb-8"
        whileHover={{ x: 10 }}
        transition={{ duration: 0.2 }}
      >
        <motion.div
          whileHover={{ rotate: 360 }}
          transition={{ duration: 0.3 }}
          className="w-6 h-6 sm:w-8 sm:h-8"
        >
          {category.icon}
        </motion.div>
        <h3 className="text-xl sm:text-2xl font-bold text-white">
          {category.title}
        </h3>
      </motion.div>

      <div className="grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 gap-3 sm:gap-6">
        {category.skills.map((skill, index) => (
          <SkillCard key={index} skill={skill} />
        ))}
      </div>
    </motion.div>
  );
};

function Skills() {
  return (
    <section className="bg-black py-8 sm:py-16">
      <div className="max-w-7xl mx-auto px-4">
        <motion.div
          initial={{ opacity: 0, y: -20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.5, ease: "easeOut" }}
          className="mb-8 sm:mb-16"
        >
          <motion.h2
            className="text-2xl sm:text-3xl font-bold text-white border-b border-gray-600 inline-block pb-2"
            whileHover={{ x: 10 }}
            transition={{ duration: 0.2 }}
          >
            Skills & Expertise
          </motion.h2>
          <motion.p
            className="text-gray-400 mt-4 max-w-2xl text-sm sm:text-base"
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.2, duration: 0.5 }}
          >
            A comprehensive overview of my technical skills across different
            areas of software development.
          </motion.p>
        </motion.div>

        <div className="space-y-8 sm:space-y-16">
          {skillsData.map((category, index) => (
            <SkillCategory key={index} category={category} />
          ))}
        </div>
      </div>
    </section>
  );
}

export default Skills;
